items = [[6, 76562], [30, 54688], [23, 67599], [24, 16152], [45, 3084], [29, 88326], [48, 53130], [50, 85330], [11, 1627], [15, 28339], [33, 50321], [26, 34688], [30, 27722], [7, 38273], [3, 17663], [24, 44058], [17, 1734], [3, 89795], [11, 34745], [8, 94355], [33, 58446], [37, 81482], [48, 26335], [9, 45832], [33, 81223], [34, 67682], [7, 90566], [31, 52809], [27, 63522], [38, 64973], [12, 28819], [13, 83000], [2, 38612], [38, 12396], [37, 85275], [30, 55511], [44, 7307], [24, 2678], [8, 29447], [4, 74358], [8, 4547], [9, 3134], [38, 14761], [3, 55325], [34, 82641], [36, 58135], [26, 87119], [38, 2402], [30, 27988], [10, 66979], [10, 84966], [29, 78894], [38, 47107], [1, 59673], [35, 12197], [50, 32072], [22, 80554], [13, 76083], [3, 85983], [28, 98215], [41, 10670], [17, 64759], [37, 76769], [16, 39808], [15, 9151], [34, 3324], [17, 21130], [49, 71699], [19, 43590], [1, 11128], [23, 48805], [29, 92985], [22, 11657], [21, 93531], [33, 94309], [47, 85456], [26, 40683], [33, 77027], [47, 3861], [11, 56512], [45, 51429], [14, 12808], [39, 90797], [47, 46797], [7, 45260], [31, 10013], [45, 47103], [28, 69263], [31, 74771], [39, 61427], [11, 24632], [30, 6173], [27, 53238], [24, 6381], [32, 51209], [29, 78629], [50, 90673], [23, 66478], [47, 31798], [33, 66628]]

def thief(backpack, items, visits):
    n = len(items)
    dp = [[0] * (backpack + 1) for _ in range(visits + 1)]
    
    for i in range(1, visits + 1):
        for j in range(1, backpack + 1):
            for k in range(n):
                if j >= items[k][0]:
                    dp[i][j] = max(dp[i][j], dp[i-1][j-items[k][0]] + items[k][1])
    
    return dp[visits][backpack]

print(thief(80, items, 10))